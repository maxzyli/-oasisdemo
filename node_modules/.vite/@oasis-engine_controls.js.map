{
  "version": 3,
  "sources": ["../@oasis-engine/controls/src/Spherical.ts", "../@oasis-engine/controls/src/FreeControl.ts", "../@oasis-engine/controls/src/OrbitControl.ts", "../@oasis-engine/controls/src/OrthoControl.ts"],
  "sourcesContent": ["import { Vector3, MathUtil } from \"oasis-engine\";\n\n// Prevent gimbal lock.\nconst ESP = MathUtil.zeroTolerance;\n\n// Spherical.\nexport class Spherical {\n  public radius;\n  public phi;\n  public theta;\n\n  constructor(radius?, phi?, theta?) {\n    this.radius = radius !== undefined ? radius : 1.0;\n    this.phi = phi !== undefined ? phi : 0;\n    this.theta = theta !== undefined ? theta : 0;\n  }\n\n  set(radius, phi, theta) {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n\n    return this;\n  }\n\n  makeSafe() {\n    this.phi = MathUtil.clamp(this.phi, ESP, Math.PI - ESP);\n    return this;\n  }\n\n  setFromVec3(v3: Vector3) {\n    this.radius = v3.length();\n    if (this.radius === 0) {\n      this.theta = 0;\n      this.phi = 0;\n    } else {\n      this.theta = Math.atan2(v3.x, v3.z);\n      this.phi = Math.acos(MathUtil.clamp(v3.y / this.radius, -1, 1));\n    }\n\n    return this;\n  }\n\n  setToVec3(v3: Vector3) {\n    const sinPhiRadius = Math.sin(this.phi) * this.radius;\n\n    v3.x = sinPhiRadius * Math.sin(this.theta);\n    v3.y = Math.cos(this.phi) * this.radius;\n    v3.z = sinPhiRadius * Math.cos(this.theta);\n\n    return this;\n  }\n}\n", "import { Entity, MathUtil, Script, Vector3 } from \"oasis-engine\";\nimport { Spherical } from \"./Spherical\";\n\n// Prevent universal lock.\nconst ESP = MathUtil.zeroTolerance;\n\nfunction includes(array, ...filterArray) {\n  return filterArray.some((e) => array.indexOf(e) !== -1);\n}\n\n/**\n * The camera's roaming controller, can move up and down, left and right, and rotate the viewing angle.\n */\nexport class FreeControl extends Script {\n  _forward = new Vector3();\n  _right = new Vector3();\n  camera: Entity;\n  mainElement: any;\n  domElement: any;\n\n  /**\n   * Movement distance per second, the unit is the unit before MVP conversion.\n   */\n  movementSpeed: number;\n\n  /**\n   * Rotate speed.\n   */\n  rotateSpeed: number;\n\n  /**\n   * Simulate a ground.\n   */\n  floorMock: boolean;\n\n  /**\n   * Simulated ground height.\n   */\n  floorY: number;\n\n  /**\n   * Only rotate when press=true\n   */\n  press: boolean;\n  keysForward: Array<string | number>;\n  keysBackward: Array<string | number>;\n  keysLeft: Array<string | number>;\n  keysRight: Array<string | number>;\n\n  /**\n   * Radian of spherical.theta.\n   */\n  private _theta: number;\n\n  /**\n   * Radian of spherical.phi.\n   */\n  private _phi: number;\n\n  private _moveForward: boolean;\n  private _moveBackward: boolean;\n  private _moveLeft: boolean;\n  private _moveRight: boolean;\n\n  private _v3Cache: Vector3;\n  private _spherical: Spherical;\n  private _rotateOri: Array<number>;\n  private _events: Array<{ type: string; listener: () => {}; element?: any }>;\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.camera = entity;\n    // @ts-ignore\n    // @todo In the future, the dependence on html elements will be removed and realized through the input of the packaging engine.\n    this.mainElement = this.scene.engine.canvas._webCanvas;\n    this.domElement = document;\n\n    this.movementSpeed = 1.0;\n    this.rotateSpeed = 1.0;\n\n    this.floorMock = true;\n    this.floorY = 0;\n\n    this.press = false;\n\n    this.keysForward = [\"KeyW\", \"ArrowUp\"];\n    this.keysBackward = [\"KeyS\", \"ArrowDown\"];\n    this.keysLeft = [\"KeyA\", \"ArrowLeft\"];\n    this.keysRight = [\"KeyD\", \"ArrowRight\"];\n\n    this._theta = 0;\n    this._phi = 0;\n\n    // private variables\n    this._moveForward = false;\n    this._moveBackward = false;\n    this._moveLeft = false;\n    this._moveRight = false;\n\n    this._v3Cache = new Vector3();\n    this._spherical = new Spherical();\n    this._rotateOri = [0, 0];\n\n    this._events = [\n      { type: \"mousemove\", listener: this.onMouseMove.bind(this) },\n      { type: \"touchmove\", listener: this.onMouseMove.bind(this) },\n      { type: \"mousedown\", listener: this.onMouseDown.bind(this) },\n      { type: \"touchstart\", listener: this.onMouseDown.bind(this) },\n      { type: \"mouseup\", listener: this.onMouseUp.bind(this) },\n      { type: \"touchend\", listener: this.onMouseUp.bind(this) },\n      { type: \"keydown\", listener: this.onKeyDown.bind(this), element: window },\n      { type: \"keyup\", listener: this.onKeyUp.bind(this), element: window },\n      { type: \"contextmenu\", listener: this.onContextMenu.bind(this) }\n    ];\n\n    this.initEvents();\n\n    // init spherical\n    this.updateSpherical();\n  }\n\n  /**\n   * Browser right click event.\n   */\n  onContextMenu(event): void {\n    event.preventDefault();\n  }\n\n  /**\n   * Keyboard press event.\n   */\n  onKeyDown(event): void {\n    const { code, key, keyCode } = event;\n    if (includes(this.keysForward, code, key, keyCode)) {\n      this._moveForward = true;\n    } else if (includes(this.keysBackward, code, key, keyCode)) {\n      this._moveBackward = true;\n    } else if (includes(this.keysLeft, code, key, keyCode)) {\n      this._moveLeft = true;\n    } else if (includes(this.keysRight, code, key, keyCode)) {\n      this._moveRight = true;\n    }\n  }\n\n  /**\n   * Keyboard up event.\n   */\n  onKeyUp(event): void {\n    const { code, key, keyCode } = event;\n    if (includes(this.keysForward, code, key, keyCode)) {\n      this._moveForward = false;\n    } else if (includes(this.keysBackward, code, key, keyCode)) {\n      this._moveBackward = false;\n    } else if (includes(this.keysLeft, code, key, keyCode)) {\n      this._moveLeft = false;\n    } else if (includes(this.keysRight, code, key, keyCode)) {\n      this._moveRight = false;\n    }\n  }\n\n  /**\n   * Mouse press event.\n   */\n  onMouseDown(event): void {\n    event.stopPropagation();\n    event = (event.changedTouches && event.changedTouches[0]) || event;\n\n    if (this.domElement !== document) {\n      this.domElement.focus();\n    }\n\n    this.press = true;\n    this._rotateOri = [event.clientX, event.clientY];\n  }\n\n  /**\n   * Mouse up event.\n   */\n  onMouseUp(event): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.press = false;\n  }\n\n  /**\n   * Mouse movement event.\n   */\n  onMouseMove(event): void {\n    if (this.press === false) return;\n    if (this.enabled === false) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n    event = (event.changedTouches && event.changedTouches[0]) || event;\n\n    const movementX = event.clientX - this._rotateOri[0];\n    const movementY = event.clientY - this._rotateOri[1];\n    this._rotateOri[0] = event.clientX;\n    this._rotateOri[1] = event.clientY;\n    const factorX = 180 / this.mainElement.width;\n    const factorY = 180 / this.mainElement.height;\n    const actualX = movementX * factorX;\n    const actualY = movementY * factorY;\n\n    this.rotate(-actualX, actualY);\n  }\n\n  /**\n   * The angle of rotation around the y axis and the x axis respectively.\n   * @param alpha - Radian to rotate around the y axis\n   * @param beta - Radian to rotate around the x axis\n   */\n  rotate(alpha: number = 0, beta: number = 0): void {\n    this._theta += MathUtil.degreeToRadian(alpha);\n    this._phi += MathUtil.degreeToRadian(beta);\n    this._phi = MathUtil.clamp(this._phi, ESP, Math.PI - ESP);\n    this._spherical.theta = this._theta;\n    this._spherical.phi = this._phi;\n    this._spherical.setToVec3(this._v3Cache);\n    Vector3.add(this.camera.transform.position, this._v3Cache, this._v3Cache);\n    this.camera.transform.lookAt(this._v3Cache, new Vector3(0, 1, 0));\n  }\n\n  onUpdate(delta: number): void {\n    if (this.enabled === false) return;\n\n    const actualMoveSpeed = (delta / 1000) * this.movementSpeed;\n    this.camera.transform.getWorldForward(this._forward);\n    this.camera.transform.getWorldRight(this._right);\n\n    if (this._moveForward) {\n      this.camera.transform.translate(this._forward.scale(actualMoveSpeed), false);\n    }\n    if (this._moveBackward) {\n      this.camera.transform.translate(this._forward.scale(-actualMoveSpeed), false);\n    }\n    if (this._moveLeft) {\n      this.camera.transform.translate(this._right.scale(-actualMoveSpeed), false);\n    }\n    if (this._moveRight) {\n      this.camera.transform.translate(this._right.scale(actualMoveSpeed), false);\n    }\n\n    if (this.floorMock) {\n      const position = this.camera.transform.position;\n      if (position.y !== this.floorY) {\n        this.camera.transform.setPosition(position.x, this.floorY, position.z);\n      }\n    }\n  }\n\n  /**\n   * Register browser events.\n   */\n  initEvents(): void {\n    this._events.forEach((ele) => {\n      if (ele.element) {\n        ele.element.addEventListener(ele.type, ele.listener, false);\n      } else {\n        this.mainElement.addEventListener(ele.type, ele.listener, false);\n      }\n    });\n  }\n\n  onDestroy(): void {\n    this._events.forEach((ele) => {\n      if (ele.element) {\n        ele.element.removeEventListener(ele.type, ele.listener, false);\n      } else {\n        this.mainElement.removeEventListener(ele.type, ele.listener, false);\n      }\n    });\n  }\n\n  /**\n   * must updateSpherical after quaternion has been changed\n   * @example\n   * Entity#lookAt([0,1,0],[0,1,0]);\n   * AFreeControls#updateSpherical();\n   */\n  updateSpherical(): void {\n    this._v3Cache.setValue(0, 0, -1);\n    Vector3.transformByQuat(this._v3Cache, this.camera.rotation, this._v3Cache);\n    this._spherical.setFromVec3(this._v3Cache);\n    this._theta = this._spherical.theta;\n    this._phi = this._spherical.phi;\n  }\n}\n", "\"use strict\";\nimport { Entity, Matrix, Script, Vector2, Vector3 } from \"oasis-engine\";\nimport { Spherical } from \"./Spherical\";\n\n/**\n * The camera's track controller, can rotate, zoom, pan, support mouse and touch events.\n */\nexport class OrbitControl extends Script {\n  camera: Entity;\n  domElement: HTMLElement | Document;\n  mainElement: HTMLCanvasElement;\n  fov: number;\n  target: Vector3;\n  up: Vector3;\n  minDistance: number;\n  maxDistance: number;\n  minZoom: number;\n  maxZoom: number;\n  enableDamping: boolean;\n  zoomFactor: number;\n  enableRotate: boolean;\n  keyPanSpeed: number;\n  minPolarAngle: number;\n  maxPolarAngle: number;\n  minAzimuthAngle: number;\n  maxAzimuthAngle: number;\n  enableZoom: boolean;\n  dampingFactor: number;\n  zoomSpeed: number;\n  enablePan: boolean;\n  autoRotate: boolean;\n  /** The radian of automatic rotation per second. */\n  autoRotateSpeed: number = Math.PI;\n  rotateSpeed: number;\n  enableKeys: boolean;\n  keys: { LEFT: number; RIGHT: number; UP: number; BOTTOM: number };\n  mouseButtons: { ORBIT: number; ZOOM: number; PAN: number };\n  touchFingers: { ORBIT: number; ZOOM: number; PAN: number };\n  STATE: {\n    TOUCH_ROTATE: number;\n    ROTATE: number;\n    TOUCH_PAN: number;\n    ZOOM: number;\n    NONE: number;\n    PAN: number;\n    TOUCH_ZOOM: number;\n  };\n  mouseUpEvents: { listener: any; type: string }[];\n  constEvents: { listener: any; type: string; element?: Window }[];\n\n  private _position: Vector3;\n  private _offset: Vector3;\n  private _spherical: Spherical;\n  private _sphericalDelta: Spherical;\n  private _sphericalDump: Spherical;\n  private _zoomFrag: number;\n  private _scale: number;\n  private _panOffset: Vector3;\n  private _isMouseUp: boolean;\n  private _vPan: Vector3;\n  private _state: any;\n  private _rotateStart: Vector2;\n  private _rotateEnd: Vector2;\n  private _rotateDelta: Vector2;\n  private _panStart: Vector2;\n  private _panEnd: Vector2;\n  private _panDelta: Vector2;\n  private _zoomStart: Vector2;\n  private _zoomEnd: Vector2;\n  private _zoomDelta: Vector2;\n\n  constructor(entity: Entity) {\n    super(entity);\n\n    this.camera = entity;\n    // @ts-ignore\n    // @todo In the future, the dependence on html elements will be removed and realized through the input of the packaging engine.\n    this.mainElement = this.engine.canvas._webCanvas;\n    this.domElement = document;\n    this.fov = 45;\n\n    // Target position.\n    this.target = new Vector3();\n\n    // Up vector\n    this.up = new Vector3(0, 1, 0);\n\n    /**\n     * The minimum distance, the default is 0.1, should be greater than 0.\n     */\n    this.minDistance = 0.1;\n    /**\n     * The maximum distance, the default is infinite, should be greater than the minimum distance\n     */\n    this.maxDistance = Infinity;\n\n    /**\n     * Minimum zoom speed, the default is 0.0.\n     * @member {Number}\n     */\n    this.minZoom = 0.0;\n\n    /**\n     * Maximum zoom speed, the default is positive infinity.\n     */\n    this.maxZoom = Infinity;\n\n    /**\n     * The minimum radian in the vertical direction, the default is 0 radian, the value range is 0 - Math.PI.\n     */\n    this.minPolarAngle = 0;\n\n    /**\n     * The maximum radian in the vertical direction, the default is Math.PI, and the value range is 0 - Math.PI.\n     */\n    this.maxPolarAngle = Math.PI;\n\n    /**\n     * The minimum radian in the horizontal direction, the default is negative infinity.\n     */\n    this.minAzimuthAngle = -Infinity;\n\n    /**\n     * The maximum radian in the horizontal direction, the default is positive infinity.\n     */\n    this.maxAzimuthAngle = Infinity;\n\n    /**\n     * Whether to enable camera damping, the default is true.\n     */\n    this.enableDamping = true;\n\n    /**\n     * Rotation damping parameter, default is 0.1 .\n     */\n    this.dampingFactor = 0.1;\n\n    /**\n     * Zoom damping parameter, default is 0.2 .\n     */\n    this.zoomFactor = 0.2;\n\n    /**\n     * Whether to enable zoom, the default is true.\n     */\n    this.enableZoom = true;\n\n    /**\n     * Camera zoom speed, the default is 1.0.\n     */\n    this.zoomSpeed = 1.0;\n\n    /**\n     * Whether to enable rotation, the default is true.\n     */\n    this.enableRotate = true;\n\n    /**\n     * Rotation speed, default is 1.0 .\n     */\n    this.rotateSpeed = 1.0;\n\n    /**\n     * Whether to enable translation, the default is true.\n     */\n    this.enablePan = true;\n\n    /**\n     * Keyboard translation speed, the default is 7.0 .\n     */\n    this.keyPanSpeed = 7.0;\n\n    /**\n     * Whether to automatically rotate the camera, the default is false.\n     */\n    this.autoRotate = false;\n\n    /**\n     * Whether to enable keyboard.\n     */\n    this.enableKeys = false;\n    this.keys = {\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      BOTTOM: 40\n    };\n\n    // Control keys.\n    this.mouseButtons = {\n      ORBIT: 0,\n      ZOOM: 1,\n      PAN: 2\n    };\n\n    this.touchFingers = {\n      ORBIT: 1,\n      ZOOM: 2,\n      PAN: 3\n    };\n\n    // Reuse objects to prevent excessive stack allocation.\n    // update\n    this._position = new Vector3();\n    this._offset = new Vector3();\n    this._spherical = new Spherical();\n    this._sphericalDelta = new Spherical();\n    this._sphericalDump = new Spherical();\n    this._zoomFrag = 0;\n    this._scale = 1;\n    this._panOffset = new Vector3();\n    this._isMouseUp = true;\n\n    // pan\n    this._vPan = new Vector3();\n\n    // state\n    this._rotateStart = new Vector2();\n    this._rotateEnd = new Vector2();\n    this._rotateDelta = new Vector2();\n\n    this._panStart = new Vector2();\n    this._panEnd = new Vector2();\n    this._panDelta = new Vector2();\n\n    this._zoomStart = new Vector2();\n    this._zoomEnd = new Vector2();\n    this._zoomDelta = new Vector2();\n\n    this.STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      ZOOM: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_ZOOM: 4,\n      TOUCH_PAN: 5\n    };\n    this._state = this.STATE.NONE;\n\n    this.constEvents = [\n      { type: \"mousedown\", listener: this.onMouseDown.bind(this) },\n      { type: \"wheel\", listener: this.onMouseWheel.bind(this) },\n      { type: \"keydown\", listener: this.onKeyDown.bind(this), element: window },\n      { type: \"touchstart\", listener: this.onTouchStart.bind(this) },\n      { type: \"touchmove\", listener: this.onTouchMove.bind(this) },\n      { type: \"touchend\", listener: this.onTouchEnd.bind(this) },\n      { type: \"contextmenu\", listener: this.onContextMenu.bind(this) }\n    ];\n\n    this.mouseUpEvents = [\n      { type: \"mousemove\", listener: this.onMouseMove.bind(this) },\n      { type: \"mouseup\", listener: this.onMouseUp.bind(this) }\n    ];\n\n    this.constEvents.forEach((ele) => {\n      if (ele.element) {\n        ele.element.addEventListener(ele.type, ele.listener, false);\n      } else {\n        this.mainElement.addEventListener(ele.type, ele.listener, false);\n      }\n    });\n  }\n\n  onDisable(): void {\n    const element = this.domElement === document ? this.domElement.body : this.domElement;\n    this.mainElement.removeEventListener(this.mouseUpEvents[0].type, this.mouseUpEvents[0].listener, false);\n    element.removeEventListener(this.mouseUpEvents[1].type, this.mouseUpEvents[1].listener, false);\n  }\n\n  onDestroy() {\n    this.constEvents.forEach((ele) => {\n      if (ele.element) {\n        ele.element.removeEventListener(ele.type, ele.listener, false);\n      } else {\n        this.mainElement.removeEventListener(ele.type, ele.listener, false);\n      }\n    });\n    const element = this.domElement === document ? this.domElement.body : this.domElement;\n    this.mainElement.removeEventListener(this.mouseUpEvents[0].type, this.mouseUpEvents[0].listener, false);\n    element.removeEventListener(this.mouseUpEvents[1].type, this.mouseUpEvents[1].listener, false);\n  }\n\n  onUpdate(dtime) {\n    if (!this.enabled) return;\n\n    const position: Vector3 = this.camera.transform.position;\n    position.cloneTo(this._offset);\n    this._offset.subtract(this.target);\n    this._spherical.setFromVec3(this._offset);\n\n    if (this.autoRotate && this._state === this.STATE.NONE) {\n      this.rotateLeft(this.getAutoRotationAngle(dtime));\n    }\n\n    this._spherical.theta += this._sphericalDelta.theta;\n    this._spherical.phi += this._sphericalDelta.phi;\n\n    this._spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, this._spherical.theta));\n    this._spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, this._spherical.phi));\n    this._spherical.makeSafe();\n\n    if (this._scale !== 1) {\n      this._zoomFrag = this._spherical.radius * (this._scale - 1);\n    }\n\n    this._spherical.radius += this._zoomFrag;\n    this._spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, this._spherical.radius));\n\n    this.target.add(this._panOffset);\n    this._spherical.setToVec3(this._offset);\n    this.target.cloneTo(this._position);\n    this._position.add(this._offset);\n\n    this.camera.transform.position = this._position;\n    this.camera.transform.lookAt(this.target, this.up);\n\n    if (this.enableDamping === true) {\n      this._sphericalDump.theta *= 1 - this.dampingFactor;\n      this._sphericalDump.phi *= 1 - this.dampingFactor;\n      this._zoomFrag *= 1 - this.zoomFactor;\n\n      if (this._isMouseUp) {\n        this._sphericalDelta.theta = this._sphericalDump.theta;\n        this._sphericalDelta.phi = this._sphericalDump.phi;\n      } else {\n        this._sphericalDelta.set(0, 0, 0);\n      }\n    } else {\n      this._sphericalDelta.set(0, 0, 0);\n      this._zoomFrag = 0;\n    }\n\n    this._scale = 1;\n    this._panOffset.setValue(0, 0, 0);\n  }\n\n  /**\n   * Get the radian of automatic rotation.\n   */\n  getAutoRotationAngle(dtime: number) {\n    return (this.autoRotateSpeed / 1000) * dtime;\n  }\n\n  /**\n   * Get zoom value.\n   */\n  getZoomScale() {\n    return Math.pow(0.95, this.zoomSpeed);\n  }\n\n  /**\n   * Rotate to the left by a certain radian.\n   * @param radian - Radian value of rotation\n   */\n  rotateLeft(radian: number) {\n    this._sphericalDelta.theta -= radian;\n    if (this.enableDamping) {\n      this._sphericalDump.theta = -radian;\n    }\n  }\n\n  /**\n   * Rotate to the right by a certain radian.\n   * @param radian - Radian value of rotation\n   */\n  rotateUp(radian: number) {\n    this._sphericalDelta.phi -= radian;\n    if (this.enableDamping) {\n      this._sphericalDump.phi = -radian;\n    }\n  }\n\n  /**\n   * Pan left.\n   */\n  panLeft(distance: number, worldMatrix: Matrix) {\n    const e = worldMatrix.elements;\n    this._vPan.setValue(e[0], e[1], e[2]);\n    this._vPan.scale(distance);\n    this._panOffset.add(this._vPan);\n  }\n\n  /**\n   * Pan right.\n   */\n  panUp(distance: number, worldMatrix: Matrix) {\n    const e = worldMatrix.elements;\n    this._vPan.setValue(e[4], e[5], e[6]);\n    this._vPan.scale(distance);\n    this._panOffset.add(this._vPan);\n  }\n\n  /**\n   * Pan.\n   * @param deltaX - The amount of translation from the screen distance in the x direction\n   * @param deltaY - The amount of translation from the screen distance in the y direction\n   */\n  pan(deltaX: number, deltaY: number) {\n    const element = this.domElement === document ? this.domElement.body : (this.domElement as HTMLElement);\n\n    // perspective only\n    const position: Vector3 = this.camera.position;\n    position.cloneTo(this._vPan);\n    this._vPan.subtract(this.target);\n    let targetDistance = this._vPan.length();\n\n    targetDistance *= (this.fov / 2) * (Math.PI / 180);\n\n    this.panLeft(-2 * deltaX * (targetDistance / element.clientHeight), this.camera.transform.worldMatrix);\n    this.panUp(2 * deltaY * (targetDistance / element.clientHeight), this.camera.transform.worldMatrix);\n  }\n\n  /**\n   * Zoom in.\n   */\n  zoomIn(zoomScale: number): void {\n    // perspective only\n    this._scale *= zoomScale;\n  }\n\n  /**\n   * Zoom out.\n   */\n  zoomOut(zoomScale: number): void {\n    // perspective only\n    this._scale /= zoomScale;\n  }\n\n  /**\n   * Rotation parameter update on mouse click.\n   */\n  handleMouseDownRotate(event) {\n    this._rotateStart.setValue(event.clientX, event.clientY);\n  }\n\n  /**\n   * Zoom parameter update on mouse click.\n   */\n  handleMouseDownZoom(event) {\n    this._zoomStart.setValue(event.clientX, event.clientY);\n  }\n\n  /**\n   * Pan parameter update on mouse click.\n   */\n  handleMouseDownPan(event) {\n    this._panStart.setValue(event.clientX, event.clientY);\n  }\n\n  /**\n   * Rotation parameter update when the mouse moves.\n   */\n  handleMouseMoveRotate(event) {\n    this._rotateEnd.setValue(event.clientX, event.clientY);\n    Vector2.subtract(this._rotateEnd, this._rotateStart, this._rotateDelta);\n\n    const element = this.domElement === document ? document.body : (this.domElement as HTMLElement);\n\n    this.rotateLeft(2 * Math.PI * (this._rotateDelta.x / element.clientWidth) * this.rotateSpeed);\n    this.rotateUp(2 * Math.PI * (this._rotateDelta.y / element.clientHeight) * this.rotateSpeed);\n\n    this._rotateEnd.cloneTo(this._rotateStart);\n  }\n\n  /**\n   * Zoom parameters update when the mouse moves.\n   */\n  handleMouseMoveZoom(event) {\n    this._zoomEnd.setValue(event.clientX, event.clientY);\n    Vector2.subtract(this._zoomEnd, this._zoomStart, this._zoomDelta);\n\n    if (this._zoomDelta.y > 0) {\n      this.zoomOut(this.getZoomScale());\n    } else if (this._zoomDelta.y < 0) {\n      this.zoomIn(this.getZoomScale());\n    }\n\n    this._zoomEnd.cloneTo(this._zoomStart);\n  }\n\n  /**\n   * Pan parameters update when the mouse moves.\n   */\n  handleMouseMovePan(event: MouseEvent): void {\n    this._panEnd.setValue(event.clientX, event.clientY);\n    Vector2.subtract(this._panEnd, this._panStart, this._panDelta);\n\n    this.pan(this._panDelta.x, this._panDelta.y);\n\n    this._panEnd.cloneTo(this._panStart);\n  }\n\n  /**\n   * Zoom parameter update when the mouse wheel is scrolled.\n   */\n  handleMouseWheel(event: MouseWheelEvent): void {\n    if (event.deltaY < 0) {\n      this.zoomIn(this.getZoomScale());\n    } else if (event.deltaY > 0) {\n      this.zoomOut(this.getZoomScale());\n    }\n  }\n\n  /**\n   * Pan parameter update when keyboard is pressed.\n   */\n  handleKeyDown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case this.keys.UP:\n        this.pan(0, this.keyPanSpeed);\n        break;\n      case this.keys.BOTTOM:\n        this.pan(0, -this.keyPanSpeed);\n        break;\n      case this.keys.LEFT:\n        this.pan(this.keyPanSpeed, 0);\n        break;\n      case this.keys.RIGHT:\n        this.pan(-this.keyPanSpeed, 0);\n        break;\n    }\n  }\n\n  /**\n   * Rotation parameter update when touch is dropped.\n   */\n  handleTouchStartRotate(event: TouchEvent) {\n    this._rotateStart.setValue(event.touches[0].pageX, event.touches[0].pageY);\n  }\n\n  /**\n   * Zoom parameter update when touch down.\n   */\n  handleTouchStartZoom(event: TouchEvent) {\n    const dx = event.touches[0].pageX - event.touches[1].pageX;\n    const dy = event.touches[0].pageY - event.touches[1].pageY;\n\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    this._zoomStart.setValue(0, distance);\n  }\n\n  /**\n   * Update the translation parameter when touch down.\n   */\n  handleTouchStartPan(event: TouchEvent) {\n    this._panStart.setValue(event.touches[0].pageX, event.touches[0].pageY);\n  }\n\n  /**\n   * Rotation parameter update when touch to move.\n   */\n  handleTouchMoveRotate(event: TouchEvent) {\n    this._rotateEnd.setValue(event.touches[0].pageX, event.touches[0].pageY);\n    Vector2.subtract(this._rotateEnd, this._rotateStart, this._rotateDelta);\n\n    const element = this.domElement === document ? this.domElement.body : (this.domElement as HTMLElement);\n\n    this.rotateLeft(((2 * Math.PI * this._rotateDelta.x) / element.clientWidth) * this.rotateSpeed);\n    this.rotateUp(((2 * Math.PI * this._rotateDelta.y) / element.clientHeight) * this.rotateSpeed);\n\n    this._rotateEnd.cloneTo(this._rotateStart);\n  }\n\n  /**\n   * Zoom parameter update when touch to move.\n   */\n  handleTouchMoveZoom(event) {\n    const dx = event.touches[0].pageX - event.touches[1].pageX;\n    const dy = event.touches[0].pageY - event.touches[1].pageY;\n\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    this._zoomEnd.setValue(0, distance);\n\n    Vector2.subtract(this._zoomEnd, this._zoomStart, this._zoomDelta);\n\n    if (this._zoomDelta.y > 0) {\n      this.zoomIn(this.getZoomScale());\n    } else if (this._zoomDelta.y < 0) {\n      this.zoomOut(this.getZoomScale());\n    }\n\n    this._zoomEnd.cloneTo(this._zoomStart);\n  }\n\n  /**\n   * Pan parameter update when touch moves.\n   */\n  handleTouchMovePan(event: TouchEvent) {\n    this._panEnd.setValue(event.touches[0].pageX, event.touches[0].pageY);\n\n    Vector2.subtract(this._panEnd, this._panStart, this._panDelta);\n\n    this.pan(this._panDelta.x, this._panDelta.y);\n\n    this._panEnd.cloneTo(this._panStart);\n  }\n\n  /**\n   * Total handling of mouse down events.\n   */\n  onMouseDown(event: MouseEvent) {\n    if (this.enabled === false) return;\n\n    event.preventDefault();\n\n    this._isMouseUp = false;\n\n    switch (event.button) {\n      case this.mouseButtons.ORBIT:\n        if (this.enableRotate === false) return;\n\n        this.handleMouseDownRotate(event);\n        this._state = this.STATE.ROTATE;\n        break;\n\n      case this.mouseButtons.ZOOM:\n        if (this.enableZoom === false) return;\n\n        this.handleMouseDownZoom(event);\n        this._state = this.STATE.ZOOM;\n        break;\n\n      case this.mouseButtons.PAN:\n        if (this.enablePan === false) return;\n\n        this.handleMouseDownPan(event);\n        this._state = this.STATE.PAN;\n        break;\n    }\n\n    if (this._state !== this.STATE.NONE) {\n      const element = this.domElement === document ? this.domElement.body : this.domElement;\n      this.mainElement.addEventListener(this.mouseUpEvents[0].type, this.mouseUpEvents[0].listener, false);\n      element.addEventListener(this.mouseUpEvents[1].type, this.mouseUpEvents[1].listener, false);\n    }\n  }\n\n  /**\n   * Total handling of mouse movement events.\n   */\n  onMouseMove(event: MouseEvent) {\n    if (this.enabled === false) return;\n\n    event.preventDefault();\n\n    switch (this._state) {\n      case this.STATE.ROTATE:\n        if (this.enableRotate === false) return;\n\n        this.handleMouseMoveRotate(event);\n        break;\n\n      case this.STATE.ZOOM:\n        if (this.enableZoom === false) return;\n\n        this.handleMouseMoveZoom(event);\n        break;\n\n      case this.STATE.PAN:\n        if (this.enablePan === false) return;\n\n        this.handleMouseMovePan(event);\n        break;\n    }\n  }\n\n  /**\n   * Total handling of mouse up events.\n   */\n  onMouseUp() {\n    if (this.enabled === false) return;\n\n    this._isMouseUp = true;\n\n    this.mouseUpEvents.forEach((ele) => {\n      const element = this.domElement === document ? this.domElement.body : this.domElement;\n      element.removeEventListener(ele.type, ele.listener, false);\n      this.mainElement.removeEventListener(ele.type, ele.listener, false);\n    });\n\n    this._state = this.STATE.NONE;\n  }\n\n  /**\n   * Total handling of mouse wheel events.\n   */\n  onMouseWheel(event: MouseWheelEvent) {\n    if (\n      this.enabled === false ||\n      this.enableZoom === false ||\n      (this._state !== this.STATE.NONE && this._state !== this.STATE.ROTATE)\n    )\n      return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.handleMouseWheel(event);\n  }\n\n  /**\n   * Total handling of keyboard down events.\n   */\n  onKeyDown(event: KeyboardEvent) {\n    if (this.enabled === false || this.enableKeys === false || this.enablePan === false) return;\n\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * Total handling of touch start events.\n   */\n  onTouchStart(event: TouchEvent) {\n    if (this.enabled === false) return;\n\n    this._isMouseUp = false;\n\n    switch (event.touches.length) {\n      case this.touchFingers.ORBIT:\n        if (this.enableRotate === false) return;\n\n        this.handleTouchStartRotate(event);\n        this._state = this.STATE.TOUCH_ROTATE;\n\n        break;\n\n      case this.touchFingers.ZOOM:\n        if (this.enableZoom === false) return;\n\n        this.handleTouchStartZoom(event);\n        this._state = this.STATE.TOUCH_ZOOM;\n\n        break;\n\n      case this.touchFingers.PAN:\n        if (this.enablePan === false) return;\n\n        this.handleTouchStartPan(event);\n        this._state = this.STATE.TOUCH_PAN;\n\n        break;\n\n      default:\n        this._state = this.STATE.NONE;\n    }\n  }\n\n  /**\n   * Total handling of touch movement events.\n   */\n  onTouchMove(event: TouchEvent) {\n    if (this.enabled === false) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    switch (event.touches.length) {\n      case this.touchFingers.ORBIT:\n        if (this.enableRotate === false) return;\n        if (this._state !== this.STATE.TOUCH_ROTATE) return;\n        this.handleTouchMoveRotate(event);\n\n        break;\n\n      case this.touchFingers.ZOOM:\n        if (this.enableZoom === false) return;\n        if (this._state !== this.STATE.TOUCH_ZOOM) return;\n        this.handleTouchMoveZoom(event);\n\n        break;\n\n      case this.touchFingers.PAN:\n        if (this.enablePan === false) return;\n        if (this._state !== this.STATE.TOUCH_PAN) return;\n        this.handleTouchMovePan(event);\n\n        break;\n\n      default:\n        this._state = this.STATE.NONE;\n    }\n  }\n\n  /**\n   * Total handling of touch end events.\n   */\n  onTouchEnd() {\n    if (this.enabled === false) return;\n\n    this._isMouseUp = true;\n    this._state = this.STATE.NONE;\n  }\n\n  /**\n   * Context event hiding.\n   */\n  onContextMenu(event) {\n    if (this.enabled === false) return;\n    event.preventDefault();\n  }\n}\n", "import { Camera, Entity, Logger, Script, Vector2, Vector3 } from \"oasis-engine\";\n\n/**\n * The camera's 2D controller, can zoom and pan.\n */\nexport class OrthoControl extends Script {\n  cameraEntity: Entity;\n  camera: Camera;\n\n  private _zoomSpeed: number = 1.0;\n  private _zoomScale: number = 1.0;\n  private _zoomScaleUnit: number = 25.0;\n  private _zoomMinSize: number = 0.0;\n  private _zoomMaxSize: number = Infinity;\n  private _isPanStart: boolean = false;\n  private _panStartPos: Vector3 = new Vector3();\n  private _panStart: Vector2 = new Vector2();\n  private _panEnd: Vector2 = new Vector2();\n  private _panDelta: Vector2 = new Vector2();\n\n  /**\n   * The zoom speed.\n   */\n  get zoomSpeed(): number {\n    return this._zoomSpeed;\n  }\n\n  set zoomSpeed(value: number) {\n    this._zoomSpeed = value;\n  }\n\n  constructor(entity: Entity) {\n    super(entity);\n\n    this.cameraEntity = entity;\n    this.camera = entity.getComponent(Camera);\n  }\n\n  onUpdate(dt: number): void {\n    if (this._zoomScale !== 1) {\n      const { camera } = this;\n      const sizeDiff = this._zoomScaleUnit * (this._zoomScale - 1);\n      const size = camera.orthographicSize + sizeDiff;\n      camera.orthographicSize = Math.max(this._zoomMinSize, Math.min(this._zoomMaxSize, size));\n      this._zoomScale = 1;\n    }\n\n    if (this._isPanStart) {\n      const { _panStart: panStart, _panEnd: panEnd } = this;\n      const panDelta = this._panDelta;\n      Vector2.subtract(panEnd, panStart, panDelta);\n      if (panDelta.x === 0 && panDelta.y === 0) {\n        return;\n      }\n      this._handlePan();\n      panEnd.cloneTo(panStart);\n    }\n  }\n\n  /**\n   * Zoom in.\n   */\n  zoomIn(): void {\n    if (!this.enabled) return;\n    this._zoomScale *= this._getZoomScale();\n  }\n\n  /**\n   * Zoom out.\n   */\n  zoomOut(): void {\n    if (!this.enabled) return;\n    this._zoomScale /= this._getZoomScale();\n  }\n\n  /**\n   * Start pan.\n   * @param x - The x-axis coordinate (unit: pixel)\n   * @param y - The y-axis coordinate (unit: pixel)\n   */\n  panStart(x: number, y: number): void {\n    if (!this.enabled) return;\n\n    this.cameraEntity.transform.position.cloneTo(this._panStartPos);\n    this._panStart.setValue(x, y);\n    this._panEnd.setValue(x, y);\n    this._isPanStart = true;\n  }\n\n  /**\n   * Panning.\n   * @param x - The x-axis coordinate (unit: pixel)\n   * @param y - The y-axis coordinate (unit: pixel)\n   *\n   * @remarks Make sure to call panStart before calling panMove.\n   */\n  panMove(x: number, y: number): void {\n    if (!this.enabled) return;\n    if (!this._isPanStart) {\n      Logger.warn(\"Make sure to call panStart before calling panMove\");\n    }\n    this._panEnd.setValue(x, y);\n  }\n\n  /**\n   * End pan.\n   */\n  panEnd(): void {\n    if (!this.enabled) return;\n    this._isPanStart = false;\n  }\n\n  private _getZoomScale(): number {\n    return Math.pow(0.95, this.zoomSpeed);\n  }\n\n  private _handlePan(): void {\n    const { width, height } = this.engine.canvas;\n    const { x, y } = this._panDelta;\n    const { camera } = this;\n    const doubleOrthographicSize = camera.orthographicSize * 2;\n    const width3D = doubleOrthographicSize * camera.aspectRatio;\n    const height3D = doubleOrthographicSize;\n    const pos = this._panStartPos;\n    pos.x -= (x * width3D) / width;\n    pos.y += (y * height3D) / height;\n    this.cameraEntity.transform.position = pos;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
